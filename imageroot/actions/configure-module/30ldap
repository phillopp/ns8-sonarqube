#!/usr/bin/env python3

#
# Copyright (C) 2024 Philip Falliano
#

import os
import sys
import agent
import agent.tasks
from agent.ldapproxy import Ldapproxy

# Setup default values
ldap_domain = os.getenv("ldap_domain")

if ldap_domain:
    # Bind to Domain
    agent.bind_user_domains([ldap_domain])

    try:
        ldap = Ldapproxy().get_domain(ldap_domain)
        'host' in ldap
    except:
        sys.exit(2)

    if ldap['schema'] == 'ad':
        userNameAttribute = 'sAMAccountName'
        groupAttribute = 'group'
        groupUserAttribute = 'member'
    else:
        userNameAttribute = 'uid'
        groupAttribute = 'groupOfUniqueNames'
        groupUserAttribute = 'uniqueMember'

    file_path = 'sonar.properties'

    tmpfile = ".{0}-{1!s}.tmp".format(os.path.basename(file_path), os.getpid())

    bdir = os.path.dirname(file_path) # Base directory
    if bdir:
        tmpfile = bdir + '/' + tmpfile # Prepend the base directory

    with open(tmpfile, 'w') as f:
        f.write('sonar.security.realm=LDAP')
        f.write('ldap.url=ldap://10.0.2.2:{}'.format(ldap['port']))

        # LDAP Credentials
        f.write('ldap.bindDn={}'.format(ldap['bind_dn']))
        f.write('ldap.bindPassword={}'.format(ldap['bind_password']))

        # User Configuration
        f.write('ldap.user.baseDn={}'.format(ldap['base_dn']))
        f.write('ldap.user.request=(&(objectClass=person)({}={{login}}))'.format(userNameAttribute))
        f.write('ldap.user.realNameAttribute=displayName')
        f.write('ldap.user.emailAttribute=mail')

        # Group Configuration
        f.write('ldap.group.baseDn={}'.format(ldap['base_dn']))
        f.write('(&(objectClass={})({}={{dn}}))'.format(groupAttribute, groupUserAttribute))

    os.rename(tmpfile, file_path)